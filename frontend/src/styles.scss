/* You can add global styles to this file, and also import other style files */

@use '@angular/material' as mat;

// Customize the entire app. Change :root to your selector if you want to scope the styles.
:root {
  --ui-font-size: 1.6rem;
  --content-font-size: 1.4rem;
  --app-max-width: 835px;
  --title-font-size: 2.4rem;
  --form-max-width: 420px;
  --main-color: #7763C5;

  @include mat.button-overrides((
    filled-container-color: var(--main-color),
    outlined-label-text-color: #fff,
    outlined-outline-color: #000
  ));

  @include mat.toolbar-overrides((
    container-background-color: #fff,
    container-text-color: var(--main-color),
    standard-height: 94px,
    mobile-height: 62px
  ));


}

html {
  font-family: Roboto;
  font-size: 10px;
}

body {
  margin: 0;
  padding-top: calc(var(--mat-toolbar-standard-height) + 6rem);
  padding-bottom: 2rem;
}

main {
  max-width: var(--app-max-width);
  margin: auto;
  padding-left: 1.6rem;
  padding-right: 1.6rem;
}

a {
  cursor: pointer;
  font-size: var(--content-font-size);
}

p {
  font-size: var(--content-font-size);
}

mat-form-field {
    width: 100%;
    padding: .75em  0;
}
mat-icon.input-invalid {
  fill: #D32F2F;
}

mat-icon.input-valid {
  fill: #3CB371;
}

button mat-icon[svgIcon="send"] {
  stroke: var(--main-color);
}

button:disabled mat-icon[svgIcon="send"] {
  stroke: #999;
}

.spacer {
  flex: 1 1 auto;
}
// common styling for elements (posts or topics)
.element-info {
  font-size: var(--content-font-size);
  display: flex;
  margin-bottom: 1rem;
  & > * {
    display: block;
    padding: .5em 0;
  }
}

.element-content {
  text-align: justify;
}

// common grid list styling for posts and topics lists
.responsive-grid {
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(360px, 1fr));
  gap: 24px;

  app-post {
    // make all posts stretch to fill cells
    display: grid;
  }

  article {
    background-color: #f5f5f5;
    padding: 1.2rem 2rem;
    border-radius: .8rem;
  
    header {
        h2 {
            font-size: var(--ui-font-size);
            text-decoration: none;
            color: #000;
            display: -webkit-box;
            -webkit-line-clamp: 2;
            -webkit-box-orient: vertical;
            overflow: hidden;
            text-overflow: ellipsis;
            line-height: 1.25;
            max-height: 2.5em; 
            height: 2.5em;
        }
    }

    .element-info {
      & > * {
        flex: 1;
      }
    }
  
    .element-content {
        font-size: var(--content-font-size);
        display: -webkit-box;
        -webkit-line-clamp: 5;
        -webkit-box-orient: vertical;
        overflow: hidden;
        text-overflow: ellipsis;
        line-height: 1.25;
        max-height: 6.25em;
        overflow: hidden;
        height: 6.25em;
        text-align: justify;
        &:not(:last-child) {
          margin-bottom: 1em;
        }
      }
  
    .element-actions {
      display: flex;
      justify-content: center;
    }
  }
}

// common styling for element detail page (post only at the moment)
.element-detail {
  font-size: 2rem;
  

  .element-info {
    font-size: 2rem;    

    & > *:not(:last-child) {
      margin-right: 2rem;
    }
  }

  .element-comments {
    margin-top: 2rem;
    border-top: 1px solid #000;

    .comments-list {
      padding: 0 4.4rem;
      list-style: none;
    }
    
    .element-comment {
      margin: 2rem auto;
      display: flex;
      align-items: center;
      

      .comment-author {
        flex: 0 0 25%;
        box-sizing: border-box;
      }

      .comment-content {
        box-sizing: border-box;
        flex: 0 0 75%;
        padding:  2rem;
        border-radius: 1.6rem;
        background-color: #f5f5f5;
      }
    }

    .comment-form {
      padding-left: 4.4rem;
      display: flex;
      align-items: center;

      .form-comment-content {
        flex: 1 0 85%;
      }

      .form-comment-submit {
        text-align: right;
      }
    }
  }
}

.loggedin-form {
  @include mat.form-field-overrides((
    outlined-focus-outline-color: var(--main-color),
    outlined-outline-color: var(--main-color),
    outlined-hover-outline-color: var(--main-color)
  ));
}
