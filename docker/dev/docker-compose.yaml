services:
  mongodb:
    container_name: myjobs-mongo
    image: mongo:8.0
    restart: always
    command: mongod --storageEngine wiredTiger --bind_ip_all --auth --keyFile /etc/mongo/mongodb-keyfile --replSet rs0
    healthcheck:
      test: |
        mongosh mongodb://admin:password@localhost:27017/admin --eval "try { rs.status().ok } catch (e) { rs.initiate({ _id: 'rs0', members: [{ _id: 0, host: 'localhost:27017' }] }).ok }"
      interval: 10s
      timeout: 30s
      retries: 3
      start_period: 60s
    ports:
      - "27017:27017"
    volumes:
      - ./mongodb-keyfile:/etc/mongo/mongodb-keyfile:rw
      - ./mongo-data/:/data/
      - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    entrypoint:
      - bash
      - -c
      - |
        chmod 400 /etc/mongo/mongodb-keyfile
        chown 999:999 /etc/mongo/mongodb-keyfile
        exec docker-entrypoint.sh $$@
    networks:
      - myjobs-network
    environment:
      - MONGO_INITDB_DATABASE=myjobs
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=password
      - MONGO_REPLICA_SET_NAME=rs0
  email:
    container_name: myjobs-email
    image: rnwood/smtp4dev
    restart: always
    ports:
      - '5000:80'
      - '25:25'
      - '143:143'
    volumes:
      - ./smtp4dev-data:/smtp4dev
    networks:
      - myjobs-network
  postgres:
    image: postgres:17.5
    container_name: myjobs-postgres
    environment:
      POSTGRES_USER: myjobs
      POSTGRES_PASSWORD: password
      POSTGRES_DB: myjobs
    ports:
      - "5432:5432"
    volumes:
      - ./pg-data:/var/lib/postgresql/data
    restart: unless-stopped

networks:
  myjobs-network:
    driver: bridge
    ipam:
      config:
        - subnet: 192.168.75.0/24